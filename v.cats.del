#!/bin/sh
############################################################################
#
# MODULE:       v.cats.del
# AUTHOR(S):    Alexander Muriy
#               (Institute of Environmental Geoscience, Moscow, Russia)  
#               e-mail: amuriy AT gmail DOT com               
#
# PURPOSE:      Deletes all categories from all layers of the vector map
#
# COPYRIGHT:    (C) 2011 Alexander Muriy / GRASS Development Team
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
############################################################################
#%Module 
#%  description: Deletes all categories from all layers of the vector map 
#%  keywords: vector, database 
#%End
#%Option
#%  key: input
#%  type: string
#%  required: yes
#%  multiple: no
#%  key_desc: name
#%  description: Name of input vector map
#%  gisprompt: old,vector,vector
#%End
#%Option
#%  key: output
#%  type: string
#%  required: yes
#%  multiple: no
#%  key_desc: name
#%  description: Name of output vector map
#%  gisprompt: new,vector,vector
#%End
############################################################################

if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 1>&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi


## set environment so that awk works properly in all languages ##
unset LC_ALL
export LC_NUMERIC=C

############################################################
cleanup()
{
    g.mremove -f vect="*_CATS_DEL*" --q
}
############################################################

## what to do in case of user break:
exitprocedure()
{
    echo "User break!"
    cleanup
    exit 1
}

## shell check for user break (signal list: trap -l)
trap "exitprocedure" 2 3 15
############################################################
## let's do it

VECT_CATS_DEL="${GIS_OPT_INPUT}_CATS_DEL"
g.copy vect=$GIS_OPT_INPUT,$VECT_CATS_DEL --o --q > /dev/null 2>&1

IF_TABLE=$(v.db.connect -pg ${VECT_CATS_DEL} 2>/dev/null)
if [ -n "$IF_TABLE" ]; then
    v.db.connect -pg ${VECT_CATS_DEL} | while read LINE; do
	LAYER=$(echo $LINE | cut -d" " -f1)
	TABLE=$(echo $LINE | cut -d" " -f2)
	KEY=$(echo $LINE | cut -d" " -f3)
	DATABASE=$(echo $LINE | cut -d" " -f4)
	DRIVER=$(echo $LINE | cut -d" " -f5)
	
	v.db.connect -d map=$VECT_CATS_DEL driver=$DRIVER database=$DATABASE table=$TABLE key=$KEY layer=$LAYER --q > /dev/null 2>&1
    done
fi

for LAYER in $(v.category in=$VECT_CATS_DEL opt=report | grep "Layer" | cut -d":" -f2); do
    CATS_STATUS=$(v.category in=$VECT_CATS_DEL opt=report | grep "Layer:" > /dev/null 2>&1 && echo $?)    
    
    ITER=0
    until [ -z $CATS_STATUS ]; do
	ITER=$((ITER+1))
	NAME="${VECT_CATS_DEL}_nocats_${ITER}"
	
	v.category in=${VECT_CATS_DEL} out=${NAME} layer=${LAYER} opt=del --q > /dev/null 2>&1
	
	g.rename vect=$NAME,$VECT_CATS_DEL --o --q  > /dev/null 2>&1 

	CATS_STATUS=$(v.category in=$VECT_CATS_DEL layer=$LAYER opt=print --q)
	if [ -n "$CATS_STATUS" ]; then
	    continue
	fi
    done
done

for CATS_TAB in $(db.tables -p | grep "_CATS_DEL"); do
    v.db.connect -d map=${CATS_TAB} --q > /dev/null 2>&1
    db.droptable -f table=${CATS_TAB} --q > /dev/null 2>&1
done

g.rename vect=${VECT_CATS_DEL},${GIS_OPT_OUTPUT} --o --q > /dev/null 2>&1

cleanup
exit 0
